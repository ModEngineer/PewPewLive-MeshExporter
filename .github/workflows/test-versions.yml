# This is a basic workflow to help you get started with Actions

# github.event_name can be used to get the name of the event that started the workflow

name: Test Versions

on:
  push:
    branches:
      - main
    paths:
      - "ppl_meshexport_addon/**"
  pull_request:
    branches:
      - main
    paths:
      - "ppl_meshexport_addon/**"
  workflow_dispatch:
    inputs:
      action:
        description: "Post-test Action (release, none)"
        required: true
        default: "none"

jobs:
  test:
    runs-on: 'ubuntu-latest'
    permissions: read-all
    strategy:
      max-parallel: 4
      matrix:
        blender-version: ["2.90", "2.80", "2.79"]
    steps:
      - name: Install Blender
        run: |
          if [ "${{ matrix.blender-version}}" = "2.79" ]; then
            sudo apt-get update
            sudo apt-get install libglu1
          fi
          sudo snap install blender --channel=${{ matrix.blender-version }} --classic
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9.6'
      #Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install add-on
        run: |
          mkdir $GITHUB_WORKSPACE/tempmodulefolder
          cp -R $GITHUB_WORKSPACE/ppl_meshexport_addon $GITHUB_WORKSPACE/tempmodulefolder/ppl_meshexport_addon
      - name: Test Add-on on version ${{ matrix.blender-version }}
        run: |
          sudo apt-get install lua5.3
          python $GITHUB_WORKSPACE/.github/workflows/blender_tests/blender_test_wrapper.py
      - name: Upload test results
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-results-blender-v${{ matrix.blender-version }}
          path: ${{ github.workspace }}/.github/workflows/blender_tests/test_results.json
          retention-days: 1
  posttest:
    runs-on: 'ubuntu-latest'
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9.6'
      - uses: actions/download-artifact@v2.0.10
        with:
          path: artifacts
      - name: Process Results
        run: |
          python $GITHUB_WORKSPACE/.github/workflows/post_test/generate_table.py
      - name: Reply to pull request or commit
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs')
            const path = require('path')

            const path_to_tables = path.join(process.env.GITHUB_WORKSPACE, ".github", "workflows", "post_test")
            let startAction = ""
            if ( context.eventName=="pull_request") {
              startAction = "pull request"
            } else {
              startAction = "commit"
            }
            let textBody = `Hi there! Here's some automated test results for your ${startAction}:\n`;
            textBody += fs.readFileSync(path.join(path_to_tables, "results_table.txt"), "utf8")
            textBody += "\n\nAny errors produced during tests will be displayed below:\n"
            textBody += fs.readFileSync(path.join(path_to_tables, "traceback_table.txt"), "utf8")

            if (startAction=="pull request") {
              await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: textBody
              })
            } else {
              await github.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: textBody
              })
            }
      - name: Prepare for release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'release' }}
        run: |
          python $GITHUB_WORKSPACE/.github/workflows/post_test/prep_release.py
      - name: Release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'release' }}
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs')
            const path = require('path')
            const path_to_release_data = path.join(process.env.GITHUB_WORKSPACE, ".github", "workflows", "post_test")
            const version = fs.readFileSync(path.join(path_to_release_data, "version.txt"), "utf8")
            let textBody = `Automated release of the PewPew Live Mesh Exporter Add-on. Test results can be viewed at the comments section of https://github.com/context.repo.owner/context.repo.repo/commit/${process.env.GITHUB_SHA}`
            let releaseResponse = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "v" + version,
              name: "v" + version,
              body: textBody,
              target_commitish: process.env.GITHUB_SHA
            })
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseResponse.id,
              name: "ppl_meshexport_addon.zip",
              data: fs.readFileSync(path.join(path_to_release_data, "ppl_meshexport_addon.zip"))
            })
